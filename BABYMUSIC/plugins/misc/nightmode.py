import random
from pyrogram import filters, Client, enums
from BABYMUSIC import app
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from pyrogram.types import ChatPermissions
from BABYMUSIC.mongo.nightmodedb import nightdb, nightmode_on, nightmode_off, get_nightchats

# Fixed Chat Permissions (Removed can_send_other_messages)
CLOSE_CHAT = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_polls=False,
    can_change_info=False,
    can_add_web_page_previews=False,
    can_pin_messages=False,
    can_invite_users=False
)

OPEN_CHAT = ChatPermissions(
    can_send_messages=True,
    can_send_media_messages=True,
    can_send_polls=True,
    can_change_info=True,
    can_add_web_page_previews=True,
    can_pin_messages=True,
    can_invite_users=True
)

buttons = InlineKeyboardMarkup([
    [InlineKeyboardButton("‡πè ·¥á…¥·¥Ä ô ü·¥á ‡πè", callback_data="add_night"),
     InlineKeyboardButton("‡πè ·¥Ö…™s·¥Ä ô ü·¥á ‡πè", callback_data="rm_night")]
])

@app.on_message(filters.command("nightmode") & filters.group)
async def _nightmode(_, message):
    return await message.reply_photo(
        photo="https://telegra.ph//file/06649d4d0bbf4285238ee.jpg",
        caption="**·¥Ñ ü…™·¥Ñ·¥ã ·¥è…¥ ·¥õ ú·¥á  ô·¥á ü·¥è·¥°  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥õ·¥è ·¥á…¥·¥Ä ô ü·¥á ·¥è Ä ·¥Ö…™s·¥Ä ô ü·¥á …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**",
        reply_markup=buttons
    )

@app.on_callback_query(filters.regex("^(add_night|rm_night)$"))
async def nightcb(_, query: CallbackQuery):
    data = query.data
    chat_id = query.message.chat.id
    user_id = query.from_user.id
    check_night = await nightdb.find_one({"chat_id": chat_id})
    
    administrators = [m.user.id async for m in app.get_chat_members(chat_id, filter=enums.ChatMembersFilter.ADMINISTRATORS)]

    if user_id in administrators:
        if data == "add_night":
            if check_night:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥á…¥·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")
            else:
                await nightmode_on(chat_id)
                await query.message.edit_caption("**‡πè ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò ·¥°…™ ü ü  ô·¥á ·¥Ñ ü·¥ès·¥á·¥Ö ·¥è…¥ ùü∑ùü∏·¥Ä·¥ç [IST] ·¥Ä…¥·¥Ö ·¥è·¥ò·¥á…¥ ·¥è…¥ ùü∂ùüº·¥Ä·¥ç [IST].**")

        elif data == "rm_night":
            if check_night:
                await nightmode_off(chat_id)
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á  Ä·¥á·¥ç·¥è·¥†·¥á·¥Ö “ì Ä·¥è·¥ç ·¥ç è ·¥Ö·¥Ä·¥õ·¥Ä ô·¥Äs·¥á!**")
            else:
                await query.message.edit_caption("**‡πè …¥…™…¢ ú·¥õ·¥ç·¥è·¥Ö·¥á …™s ·¥Ä ü Ä·¥á·¥Ä·¥Ö è ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")

async def start_nightmode():
    chats = [int(chat["chat_id"]) for chat in await get_nightchats()]
    if not chats:
        return

    for chat_id in chats:
        try:
            await app.send_photo(
                chat_id,
                photo="https://telegra.ph//file/06649d4d0bbf4285238ee.jpg",
                caption="**…¢ Ä·¥è·¥ú·¥ò …™s ·¥Ñ ü·¥ès…™…¥…¢. …¢·¥è·¥è·¥Ö …¥…™…¢ ú·¥õ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!**"
            )
            await app.set_chat_permissions(chat_id, CLOSE_CHAT)
        except Exception as e:
            print(f"Error closing group {chat_id}: {e}")

async def close_nightmode():
    chats = [int(chat["chat_id"]) for chat in await get_nightchats()]
    if not chats:
        return

    for chat_id in chats:
        try:
            await app.send_photo(
                chat_id,
                photo="https://telegra.ph//file/14ec9c3ff42b59867040a.jpg",
                caption="**…¢ Ä·¥è·¥ú·¥ò …™s ·¥è·¥ò·¥á…¥…™…¥…¢. …¢·¥è·¥è·¥Ö ·¥ç·¥è Ä…¥…™…¥…¢ ·¥á·¥†·¥á Ä è·¥è…¥·¥á!**"
            )
            await app.set_chat_permissions(chat_id, OPEN_CHAT)
        except Exception as e:
            print(f"Error opening group {chat_id}: {e}")

# Scheduling night mode operations
scheduler = AsyncIOScheduler(timezone="Asia/Kolkata")
scheduler.add_job(start_nightmode, trigger="cron", hour=23, minute=59)
scheduler.add_job(close_nightmode, trigger="cron", hour=6, minute=1)
scheduler.start()
